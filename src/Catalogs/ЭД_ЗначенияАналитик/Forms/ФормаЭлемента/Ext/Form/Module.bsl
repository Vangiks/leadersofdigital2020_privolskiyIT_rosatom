
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ ВЫПОЛНЯЕМЫЕ НА Сервере

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	КоличествоСвойств = ЭД_ОбщегоНазначения.ПолучитьКоличествоСвойств();
	
	Для Ин = 1 По КоличествоСвойств Цикл  		
		Если ЗначениеЗаполнено(Объект.Владелец["ИмяСвойства" + Ин]) Тогда 			
			Элементы["Свойство" + Ин].Заголовок = Объект.Владелец["ИмяСвойства" + Ин];
			Элементы["Свойство" + Ин].Видимость = Истина;  		
			
			НовыйПараметр 	= Новый ПараметрВыбора("Отбор.Владелец", Объект.Владелец["ТипСвойства" + Ин]);
			НовыйМассив 	= Новый Массив();
			
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры 	= Новый ФиксированныйМассив(НовыйМассив);
			Элементы["Свойство" + Ин].ПараметрыВыбора = НовыеПараметры;
		
		КонецЕсли; 	
		
		Если ЗначениеЗаполнено(Объект.Владелец["ИмяСвойстваСтрока" + Ин]) Тогда 			
			Элементы["СвойствоСтрока" + Ин].Заголовок = Объект.Владелец["ИмяСвойстваСтрока" + Ин];
			Элементы["СвойствоСтрока" + Ин].Видимость = Истина;  			
		КонецЕсли; 		
		
		Если ЗначениеЗаполнено(Объект.Владелец["ИмяСвойстваБулево" + Ин]) Тогда 			
			Элементы["СвойствоБулево" + Ин].Заголовок = Объект.Владелец["ИмяСвойстваБулево" + Ин];
			Элементы["СвойствоБулево" + Ин].Видимость = Истина;  			
		КонецЕсли; 		
		
		Если ЗначениеЗаполнено(Объект.Владелец["ИмяСвойстваДата" + Ин]) Тогда 			
			Элементы["СвойствоДата" + Ин].Заголовок = Объект.Владелец["ИмяСвойстваДата" + Ин];
			Элементы["СвойствоДата" + Ин].Видимость = Истина;  			
		КонецЕсли; 		
	КонецЦикла;	
	
	Если Объект.Владелец = ПланыВидовХарактеристик.ЭД_ТипыАналитик.Периоды Тогда
		
		Элементы.Периодичность.Видимость 				= Истина;
		Если Объект.Ссылка.Пустая() Тогда
			Элементы.ДатаНачала.ОтметкаНезаполненного 		= Истина;
			Элементы.ДатаОкончания.ОтметкаНезаполненного 	= Истина;
			Элементы.Периодичность.ОтметкаНезаполненного 	= Истина;
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры	


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ НА Сервере

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		Элементы.Код.Маска = Объект.Владелец.МаскаКодаЗначения;
	КонецЕсли;	
	
	УстановитьВидимостьЭлементов(); 
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.Владелец = ПланыВидовХарактеристик.ЭД_ТипыАналитик.Периоды Тогда
		Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
	        Сообщение = Новый СообщениеПользователю();
	        Сообщение.Текст = "Не заполнена дата начала";
	        Сообщение.Поле = "Объект.ДатаНачала";
	        Сообщение.УстановитьДанные(Объект.ДатаНачала);
	        Сообщение.Сообщить();
	        Отказ = Истина;
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
	        Сообщение = Новый СообщениеПользователю();
	        Сообщение.Текст = "Не заполнена дата окончания";
	        Сообщение.Поле = "Объект.ДатаОкончания";
	        Сообщение.УстановитьДанные(Объект.ДатаОкончания);
	        Сообщение.Сообщить();
	        Отказ = Истина;
		КонецЕсли;	  		
		
		Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
	        Сообщение = Новый СообщениеПользователю();
	        Сообщение.Текст = "Не заполнена периодичность";
	        Сообщение.Поле = "Объект.Периодичность";
	        Сообщение.УстановитьДанные(Объект.Периодичность);
	        Сообщение.Сообщить();
	        Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	     	
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура СинхронизироватьДатыПериодичность(ДатаНачала, ДатаОкончания, Периодичность, Наименование)
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = ?(ЗначениеЗаполнено(ДатаОкончания), ДатаОкончания, ТекущаяДата());
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Периодичность) Тогда
		Если Периодичность = Перечисления.ЭД_Периодичность.Год Тогда
			ДатаНачала	 = НачалоГода(ДатаНачала);
			ДатаОкончания = КонецГода(ДатаНачала);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.Полугодие Тогда
			Если Месяц(ДатаНачала) <= 6 Тогда
				ДатаНачала	 = НачалоГода(ДатаНачала);
			Иначе	
				ДатаНачала	 = ДобавитьМесяц(НачалоГода(ДатаНачала), 6);
			КонецЕсли;	
			ДатаОкончания = КонецГода(ДатаНачала);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.Квартал Тогда
			ДатаНачала	 	= НачалоКвартала(ДатаНачала);
			ДатаОкончания 	= КонецКвартала(ДатаНачала);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.Месяц Тогда
			ДатаНачала	 	= НачалоМесяца(ДатаНачала);
			ДатаОкончания 	= КонецМесяца(ДатаНачала);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.Неделя Тогда
			ДатаНачала	 	= Макс(НачалоНедели(ДатаНачала), НачалоГода(ДатаНачала));
			ДатаОкончания 	= Мин(КонецНедели(ДатаНачала), КонецГода(ДатаНачала));
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.День Тогда
			ДатаОкончания 	= ДатаНачала;
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.ДваГода Тогда
			ДатаНачала	 	= НачалоГода(ДатаНачала);
			ДатаОкончания 	= ДобавитьМесяц(КонецГода(ДатаНачала), 12);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.ТриГода Тогда
			ДатаНачала	 	= НачалоГода(ДатаНачала);
			ДатаОкончания 	= ДобавитьМесяц(КонецГода(ДатаНачала), 24);
		ИначеЕсли Периодичность = Перечисления.ЭД_Периодичность.ПятьЛет Тогда
			ДатаНачала	 	= НачалоГода(ДатаНачала);
			ДатаОкончания 	= ДобавитьМесяц(КонецГода(ДатаНачала), 48);
		Иначе	
			ДатаНачала	 	= НачалоГода(ТекущаяДата());
			ДатаОкончания 	= КонецГода(ДатаНачала);
		КонецЕсли;	
	КонецЕсли;	
	
	Наименование = ЭД_ОбщегоНазначения.СформироватьНаименованиеПериода(Периодичность, ДатаНачала, ДатаОкончания);
	
	
КонецПроцедуры	


&НаСервереБезКонтекста
Процедура ДатаНачалаПриИзмененииСервер()
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	СинхронизироватьДатыПериодичность(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Периодичность, Объект.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	СинхронизироватьДатыПериодичность(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Периодичность, Объект.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	СинхронизироватьДатыПериодичность(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Периодичность, Объект.Наименование);
	
КонецПроцедуры


