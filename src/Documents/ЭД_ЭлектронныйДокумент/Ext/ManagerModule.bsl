
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	(ЗначениеРазрешено(Организация))";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

#КонецОбласти

Функция СформироватьВыгрузкуXML(Ссылка) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		ВызватьИсключение НСтр("ru = 'Неверно передан документ для формирования xml'");
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПространствоИмен = Метаданные.ПакетыXDTO.EPCOPackageExchange.ПространствоИмен;
	
	типPackage       = ФабрикаXDTO.Тип(ПространствоИмен, "Package");
	
	типOrganization  = ФабрикаXDTO.Тип(ПространствоИмен, "Organization");
	типBank          = ФабрикаXDTO.Тип(ПространствоИмен, "Bank");
	типContract      = ФабрикаXDTO.Тип(ПространствоИмен, "Contract");
	
	типBanksList     = ФабрикаXDTO.Тип(ПространствоИмен, "BanksList");
	типBanksRow      = ФабрикаXDTO.Тип(ПространствоИмен, "BanksRow");
	
	типContractsList = ФабрикаXDTO.Тип(ПространствоИмен, "ContractsList");
	типContractsRow  = ФабрикаXDTO.Тип(ПространствоИмен, "ContractsRow");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.ID КАК ID,
		|	Организации.Наименование КАК Name,
		|	Организации.ИНН КАК INN,
		|	Организации.КПП КАК KPP
		|ИЗ
		|	Документ.ЭД_ЭлектронныйДокумент КАК ЭД_ЭлектронныйДокумент
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ЭД_ЭлектронныйДокумент.Организация = Организации.Ссылка
		|ГДЕ
		|	ЭД_ЭлектронныйДокумент.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Организации.ID КАК ID,
		|	Организации.Наименование КАК Name,
		|	Организации.ИНН КАК INN,
		|	Организации.КПП КАК KPP,
		|	КлассификаторБанков.Наименование КАК Name_Bank,
		|	КлассификаторБанков.ИНН КАК INN_Bank,
		|	КлассификаторБанков.СВИФТБИК КАК BIK,
		|	Валюты.Наименование КАК Currency,
		|	ЭД_ЭлектронныйДокументОстаткиПоСчетам.Сумма КАК Sum,
		|	ЭД_ЭлектронныйДокументОстаткиПоСчетам.Комментарий КАК Comment
		|ИЗ
		|	Документ.ЭД_ЭлектронныйДокумент.ОстаткиПоСчетам КАК ЭД_ЭлектронныйДокументОстаткиПоСчетам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ЭД_ЭлектронныйДокументОстаткиПоСчетам.Организация = Организации.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
		|		ПО ЭД_ЭлектронныйДокументОстаткиПоСчетам.Банк = КлассификаторБанков.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
		|		ПО ЭД_ЭлектронныйДокументОстаткиПоСчетам.Валюта = Валюты.Ссылка
		|ГДЕ
		|	ЭД_ЭлектронныйДокументОстаткиПоСчетам.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организации.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Организации.ID КАК ID,
		|	Организации.Наименование КАК Name,
		|	Организации.ИНН КАК INN,
		|	Организации.КПП КАК KPP,
		|	ФинансовыеСделки.Наименование КАК Name_Contract,
		|	Валюты.Наименование КАК Currency,
		|	ФинансовыеСделки.ДатаЗаключения КАК Date,
		|	ФинансовыеСделки.ДатаНачалаДействия КАК StartDate,
		|	ФинансовыеСделки.ДатаОкончания КАК EndDate,
		|	ЭД_ЭлектронныйДокументФинансовыеСделки.Сумма КАК Sum
		|ИЗ
		|	Документ.ЭД_ЭлектронныйДокумент.ФинансовыеСделки КАК ЭД_ЭлектронныйДокументФинансовыеСделки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ЭД_ЭлектронныйДокументФинансовыеСделки.Организация = Организации.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФинансовыеСделки КАК ФинансовыеСделки
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
		|			ПО ФинансовыеСделки.Валюта = Валюты.Ссылка
		|		ПО ЭД_ЭлектронныйДокументФинансовыеСделки.Сделка = ФинансовыеСделки.Ссылка
		|ГДЕ
		|	ЭД_ЭлектронныйДокументФинансовыеСделки.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организации.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаОрганизации      = РезультатЗапроса[0].Выбрать();
	ВыборкаОстаткиПоСчетам  = РезультатЗапроса[1].Выбрать();
	ВыборкаФинансовыеСделки = РезультатЗапроса[2].Выбрать();
	
	ВыборкаОрганизации.Следующий();
	
	
	Package = ФабрикаXDTO.Создать(типPackage);
	Package.Organization = СформироватьOrganization(ВыборкаОрганизации, типOrganization);
	
	BanksList = ФабрикаXDTO.Создать(типBanksList);
	Пока ВыборкаОстаткиПоСчетам.Следующий() Цикл
		
		BanksRow = ФабрикаXDTO.Создать(типBanksRow);
		ЗаполнитьЗначенияСвойств(BanksRow, ВыборкаОстаткиПоСчетам);
		
		BanksRow.Organization = СформироватьOrganization(ВыборкаОстаткиПоСчетам, типOrganization);
		BanksRow.Bank = СформироватьBank(ВыборкаОстаткиПоСчетам, типBank);
		
		BanksList.BanksRow.Добавить(BanksRow);
	КонецЦикла;
	
	Package.BanksList = BanksList;
	
	
	ContractsList = ФабрикаXDTO.Создать(типContractsList);
	Пока ВыборкаФинансовыеСделки.Следующий() Цикл
		
		ContractsRow = ФабрикаXDTO.Создать(типContractsRow);
		ЗаполнитьЗначенияСвойств(ContractsRow, ВыборкаФинансовыеСделки);
		
		ContractsRow.Organization = СформироватьOrganization(ВыборкаФинансовыеСделки, типOrganization);
		ContractsRow.Contract = СформироватьContract(ВыборкаФинансовыеСделки, типContract);
		
		ContractsList.ContractsRow.Добавить(ContractsRow);
	КонецЦикла;
	
	Package.ContractsList = ContractsList;
	
	
	МойXML = Новый ЗаписьXML; 
	МойXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(МойXML, Package);
	
	Возврат МойXML.Закрыть();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьOrganization(Выборка, типOrganization)
	
	Organization = ФабрикаXDTO.Создать(типOrganization);
	ЗаполнитьЗначенияСвойств(Organization, Выборка);
	
	Возврат Organization;
	
КонецФункции

Функция СформироватьBank(Выборка, типBank)
	
	Bank = ФабрикаXDTO.Создать(типBank);
	ЗаполнитьЗначенияСвойств(Bank, Выборка);
	
	Bank.Name = Выборка.Name_Bank;
	Bank.INN  = Выборка.INN_Bank;
	
	Возврат Bank;
	
КонецФункции

Функция СформироватьContract(Выборка, типContract)
	
	Contract = ФабрикаXDTO.Создать(типContract);
	ЗаполнитьЗначенияСвойств(Contract, Выборка);
	
	Contract.Name = Выборка.Name_Contract;
	
	Возврат Contract;
	
КонецФункции



#КонецОбласти